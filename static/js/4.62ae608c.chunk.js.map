{"version":3,"sources":["utils/data/colors.ts","utils/data/presentations.ts","pages/Home/Home.styles.ts","store/global/atoms.ts","components/Sidebar/Sidebar.styles.ts","components/Sidebar/InfoDialog/faqs.ts","components/Sidebar/InfoDialog/FaqList.tsx","components/Header/BrandDialog/BrandDialog.styles.ts","components/Header/BrandDialog/SocialNetworks.tsx","components/Sidebar/InfoDialog/index.tsx","components/Sidebar/Header.tsx","utils/helpers.ts","components/Sidebar/Footer.tsx","components/Sidebar/SloganCheckbox.tsx","utils/data/slogans.ts","components/Sidebar/Slogan.tsx","components/Sidebar/Quote.tsx","components/Sidebar/Name.tsx","components/Sidebar/NumberItem.tsx","components/Sidebar/Number.tsx","components/Sidebar/Tshirt.tsx","components/Sidebar/Color.tsx","components/Sidebar/index.tsx","components/Header/Header.styles.ts","components/Header/BrandDialog/index.tsx","components/Header/ShareButton.tsx","components/Header/index.tsx","pages/Home/PreviewButton/PreviewButton.styles.ts","pages/Home/PreviewButton/index.tsx","pages/Home/DownloadButton.tsx","pages/Home/index.tsx","utils/data/sketches.ts","store/app/atoms.ts"],"names":["colors","id","active","dark","color","presentations","name","source","text","shadow","useStyles","makeStyles","theme","createStyles","container","backgroundColor","background","zIndex","height","spinner","global","globalSidebarState","atom","key","default","globalPreviewState","muitheme","drawerPaper","width","breakpoints","up","box","borderTopStyle","borderTopWidth","borderTopColor","palette","grey","overflow","scrollbarColor","scrollbarWidth","boxShadow","borderRadius","faqs","question","answer","user","FaqList","List","disablePadding","map","faq","Box","mb","Paper","variant","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","ListItemText","primary","fontWeight","secondary","component","Link","href","target","muiTheme","avatar","main","fontSize","twitter","facebook","instragram","button","textTransform","BrandDialog","classes","p","pb","Typography","Grid","spacing","item","xs","sm","Button","startIcon","className","fullWidth","rel","InfoDialog","React","useState","open","setOpen","useTheme","fullScreen","useMediaQuery","down","IconButton","onClick","Dialog","onClose","aria-labelledby","AppBar","position","elevation","Toolbar","flexGrow","edge","aria-label","DialogContent","my","SocialNetworks","Header","useRecoilState","sidebar","setSidebar","mr","display","downloadLink","data","type","a","document","createElement","date","Date","download","getTime","click","htmlToImage","refNode","options","scale","x","y","scrollX","scrollY","window","outerWidth","outerHeight","windowWidth","windowHeight","html2canvas","then","response","image","toDataURL","Footer","refCanvasElement","loading","setLoading","Hidden","xsDown","Divider","py","px","size","disabled","scrollTo","current","CircularProgress","SloganCheckbox","appShowSloganState","showSlogan","setShowSlogan","FormControlLabel","control","Checkbox","checked","onChange","label","slogans","Slogan","appSloganState","slogan","setSlogan","disableElevation","Quote","appQuoteState","quote","setQuote","TextField","placeholder","value","event","toUpperCase","length","Name","appNameState","setName","test","NumberItem","tshirtNumbers","Number","appNumberState","number","setNumber","getVariant","getColor","toString","mt","InputLabelProps","shrink","inputProps","inputMode","InputProps","startAdornment","InputAdornment","parseFloat","Tshirt","appPresentationState","presentation","setPresentation","setColor","useSetRecoilState","appColorState","filter","find","handlePresentation","Color","getStyle","style","Sidebar","Drawer","paper","anchor","root","grow","process","ShareButton","navigator","share","title","url","location","catch","Navbar","preview","device","isMobile","deviceIsMobile","phone","tablet","Slide","appear","direction","in","endIcon","content","top","bottom","left","right","darkButton","borderColor","paddingLeft","paddingRight","Preview","setPreview","textAlign","DownloadButton","Fab","TShirt","lazy","Home","useRef","justifyContent","ref","fallback","smUp","PreviewButton","sketches","sketch","app"],"mappings":"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","file":"static/js/4.62ae608c.chunk.js","sourcesContent":["const colors = [\n  {\n    id: 'main',\n    active: true,\n    dark: true,\n    color: '#2E3548'\n  },\n  {\n    id: 'secondary',\n    active: true,\n    dark: true,\n    color: '#0A6F4A'\n  },\n  {\n    id: 'exclusive',\n    active: false,\n    dark: true,\n    color: '#3F0'\n  },\n  {\n    id: 'grey',\n    active: true,\n    dark: false,\n    color: '#9ba0a5'\n  }\n]\n\nexport default colors","const presentations = [\n  {\n    id: 'main',\n    name: 'Principal',\n    source: 'PrincipalAlianzaLima2021.png',\n    text: {\n      color: '#E12921',\n      shadow: '#FFFFFF'\n    }, \n    active: true\n  },\n  {\n    id: 'secondary',\n    name: 'Alterna',\n    source: 'AlternaAlianzaLima2021.png',\n    text: {\n      color: '#FFFFFF',\n      shadow: '#040804'\n    },\n    active: true\n  },\n  {\n    id: 'purple',\n    name: 'Morada',\n    source: 'MoradaAlianzaLima2021.png',\n    text: {\n      color: '#FFFFFF',\n      shadow: '#040804'\n    },\n    active: false\n  }\n]\n\nexport default presentations","import { makeStyles, createStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles((theme) =>\n  createStyles({\n    container: ({ color }: any) => ({\n      backgroundColor: color.color,\n      background: `radial-gradient(circle, transparent, rgba(0, 0, 0, .6) 85%)`,\n      zIndex: 0,\n      height: '100vh',\n    }),\n    spinner: {\n      color: 'white'\n    }\n  })\n)","import { atom } from 'recoil'\nimport { IGlobal } from 'store/types/global'\n\nconst global: IGlobal = {\n  sidebar: false,\n  preview: false\n}\n\nexport const globalSidebarState = atom({\n  key: 'globalSidebar',\n  default: global.sidebar\n})\n\nexport const globalPreviewState = atom({\n  key: 'globalPreview',\n  default: global.preview\n})","import { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles((muitheme: Theme) =>\n  createStyles({\n    drawerPaper: {\n      width: '100%',\n      [muitheme.breakpoints.up('sm')]: {\n        width: 380,\n      }\n    },\n    box: {\n      borderTopStyle: 'solid',\n      borderTopWidth: 1,\n      borderTopColor: muitheme.palette.grey[200],\n      height: '100%',\n      overflow: 'auto',\n      scrollbarColor: `${muitheme.palette.grey[400]} ${muitheme.palette.grey[100]}`,\n      scrollbarWidth: 'thin',\n      [muitheme.breakpoints.up('sm')]: {\n        '&::-webkit-scrollbar-track': {\n          boxShadow: 'inset 0 0 6px rgba(0,0,0,0.1)',\n          borderRadius: 10,\n          backgroundColor: muitheme.palette.grey[100],\n        },\n        '&::-webkit-scrollbar': {\n          width: 6,\n          height: 6,\n          backgroundColor: muitheme.palette.grey[400]\n        },\n        '&::-webkit-scrollbar-thumb': {\n          borderRadius: 10,\n          boxShadow: 'inset 0 0 6px rgba(0,0,0,.1)',\n          backgroundColor: muitheme.palette.grey[400],\n        }\n      }\n    }\n  })\n)","const faqs = [\n  { \n    question: 'No me funciona usando Chrome',\n    answer: 'Lo probé con el Edge y va perfectamente! Una recomendación para todos. Gracias CRACK!.',\n    user: 'averasil',\n    source: 'https://pbs.twimg.com/profile_images/1364381981551828992/3E7weT1-_200x200.jpg'\n  },\n  { \n    question: 'Descarga de imagen negra',\n    answer: 'Salió chvr cuando se abre la página sale para ponerla en español o inglés, si lo ponen en español sale la imagen toda negra, tienen q dejarlo en inglés.',\n    user: 'edmaguti21',\n    source: 'https://pbs.twimg.com/profile_images/1381042734560112644/zIe_3GPc_bigger.jpg'\n  },\n  { \n    question: '¿Dónde se descarga la imagen?',\n    answer: 'Al finalizar tu elección, das click en guardar y la imagen se alojará en la carpeta de descargas del cel',\n    user: 'luca_2724',\n    source: 'https://pbs.twimg.com/profile_images/1379468786865160192/KegOfWxZ_200x200.jpg'\n  },\n  { \n    question: 'Igual, no sale, alguien sabe la solución?',\n    answer: 'Sabes pude hacerlo pero tuve que entrar con navegador incógnito!',\n    user: 'riedhesu',\n    source: 'https://pbs.twimg.com/profile_images/1215382327620259841/h-LCdcwg_bigger.jpg'\n  },\n  { \n    question: 'Intenté todo y no se puede',\n    answer: 'Aplica una captura de pantalla, lo editas y queda pulenta...',\n    user: 'FerrandGerard',\n    source: 'https://pbs.twimg.com/profile_images/1360004564297150468/3GTm3tsJ_200x200.jpg'\n  }\n]\n\nexport default faqs","import {\n  Avatar,\n  Box,\n  Link,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Paper,\n} from '@material-ui/core'\nimport faqs from './faqs'\n\nconst FaqList = () => {\n  return (\n    <List disablePadding>\n      {faqs.map((faq: any) => (\n        <Box mb={2} key={faq.user}>\n          <Paper variant=\"outlined\">\n            <ListItem alignItems=\"flex-start\">\n              <ListItemAvatar>\n                <Avatar alt={faq.user} src={faq.source} />\n              </ListItemAvatar>\n              <ListItemText\n                primary={<Box fontWeight=\"fontWeightSemiBold\">{faq.question}</Box>}\n                secondary={\n                  <Box\n                    component=\"span\"\n                    color=\"secondary\"\n                  >\n                    <Link \n                      color=\"secondary\"\n                      href={`https://twitter.com/${faq.user}`}\n                      target=\"_blank\"\n                    >\n                      @{faq.user}\n                    </Link> — {faq.answer}.\n                  </Box>\n                }\n              />\n            </ListItem>\n          </Paper>\n        </Box>\n      ))}\n    </List>\n  )\n}\n\nexport default FaqList\n","import { createStyles, makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles((muiTheme) =>\n  createStyles({\n    avatar: {\n      color: 'white',\n      backgroundColor: muiTheme.palette.primary.main,\n      fontWeight: 700,\n      fontSize: 18,\n      width: 35,\n      height: 35\n    },\n    twitter: {\n      color: '#00acee'\n    },\n    facebook: {\n      color: '#3b5998'\n    },\n    instragram: {\n      color: '#E1306C'\n    },\n    button: {\n      textTransform: 'capitalize',\n      fontWeight: 800\n    }\n  })\n)","import { \n  Box,\n  Button,\n  Grid,\n  Paper,\n  Typography\n} from '@material-ui/core'\nimport TwitterIcon from '@material-ui/icons/Twitter'\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined'\nimport InstagramIcon from '@material-ui/icons/Instagram'\nimport { useStyles } from './BrandDialog.styles'\n\nconst BrandDialog = () => {\n  const classes = useStyles()\n  return (\n    <Paper variant=\"outlined\">\n      <Box p={3}>\n        <Box pb={2}>\n          <ThumbUpAltOutlinedIcon color=\"secondary\" fontSize=\"large\" />\n        </Box>\n        <Typography variant=\"body2\">\n          <strong>COMPARTE</strong> \n          <br />\n          Síguenos en nuestra redes para enterarte de nuevas actualizaciones.\n        </Typography>\n        <Box mb={2} />\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <Button\n              variant=\"contained\"\n              startIcon={<TwitterIcon className={classes.twitter} />}\n              className={classes.button}\n              fullWidth\n              href=\"https://twitter.com/BlanquiazulAL\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              @BlanquiazulAL\n            </Button>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Button\n              variant=\"contained\"\n              startIcon={<InstagramIcon className={classes.instragram} />}\n              className={classes.button}\n              fullWidth\n              href=\"https://instagram.com/BlanquiazulAL\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              @BlanquiazulAL\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Paper>\n  )\n}\n\nexport default BrandDialog","import React from 'react'\nimport {\n  AppBar,\n  Box,\n  Dialog,\n  DialogContent,\n  IconButton,\n  Toolbar,\n  Typography\n}\nfrom '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport HelpIcon from '@material-ui/icons/Help'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { useTheme } from '@material-ui/core/styles'\nimport FaqList from './FaqList'\nimport SocialNetworks from 'components/Header/BrandDialog/SocialNetworks'\n\nconst InfoDialog = () => {\n  const [open, setOpen] = React.useState(false)\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'))\n\n  return (\n    <>\n      <IconButton \n        color=\"secondary\"\n        onClick={() => setOpen(true)}\n      >\n        <HelpIcon />\n      </IconButton>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <AppBar \n          position=\"relative\"\n          color=\"transparent\"\n          elevation={0}\n        >\n          <Toolbar>\n            <Typography variant=\"h6\">\n              <strong>PREGUNTAS FRECUENTES</strong>\n            </Typography>\n            <Box flexGrow={1} />\n            <IconButton\n              edge=\"end\"\n              color=\"inherit\"\n              aria-label=\"close\"\n              onClick={() => setOpen(false)}\n            >\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <DialogContent>\n          <Typography>\n            Para una mejor experiencia utiliza navegadores modernos como Google Chrome, Safari o Mozilla. Si esto no es suficiente te dejamos una lista de posibles soluciones compartida por los mismos usuarios: \n          </Typography>\n          <Box my={2}>\n            <FaqList />\n          </Box>\n          <SocialNetworks />\n          <Box mb={2} />\n        </DialogContent>\n      </Dialog>\n    </>\n  )\n}\n\nexport default InfoDialog","import { AppBar, Box, IconButton, Toolbar, Typography } from '@material-ui/core'\nimport TuneOutlinedIcon from '@material-ui/icons/TuneOutlined'\nimport CloseIcon from '@material-ui/icons/Close'\nimport InfoDialog from './InfoDialog'\nimport { useRecoilState } from 'recoil'\nimport { globalSidebarState } from 'store/global/atoms'\n\nconst Header = () => {\n  const [sidebar, setSidebar] = useRecoilState(globalSidebarState)\n  return (\n    <AppBar position=\"static\" color=\"transparent\" elevation={0}>\n      <Toolbar>\n        <Box component=\"span\" mr={2} display=\"flex\" alignItems=\"center\">\n          <TuneOutlinedIcon color=\"primary\" />\n        </Box>\n        <Typography variant=\"body1\">\n          PERSONALIZA\n        </Typography>\n        <Box flexGrow={1} />\n        <InfoDialog />\n        <IconButton\n          edge=\"end\"\n          color=\"inherit\"\n          aria-label=\"close\"\n          onClick={() => setSidebar(!sidebar)}\n        >\n          <CloseIcon />\n        </IconButton> \n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Header\n","import html2canvas from 'html2canvas'\n\nexport const downloadLink = (data: string, type: string): void => {\n  const a = document.createElement('a')\n  const date = new Date()\n  a.download = `BLANQUIAZUL-COM--${date.getTime()}.${type}`\n  a.href = data\n  a.click()\n}\n\nexport const htmlToImage = async (refNode: any) => {\n  const scale = 3\n  if (refNode) {\n    const options = {\n      scale,\n      x: 0,\n      y: 0,\n      scrollX: 0,\n      scrollY: 0,\n      width: window.outerWidth,\n      height: window.outerHeight,\n      windowWidth: window.outerWidth,\n      windowHeight: window.outerHeight,\n    }\n    return await \n      html2canvas(refNode, options)\n        .then((response) => {\n          const image = response.toDataURL('image/jpeg')\n          downloadLink(image, 'jpeg')\n        })\n  }\n}\n\n","import React from 'react'\nimport { AppBar, Box, Button, CircularProgress, Divider, Hidden } from '@material-ui/core'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport { htmlToImage } from 'utils/helpers'\n\ntype TProps = {\n  refCanvasElement: React.RefObject<HTMLElement>\n}\n\nconst Footer = ({ refCanvasElement }: TProps) => {\n  const [loading, setLoading] = React.useState<boolean>(false)\n  const handleDownload = () => {\n    window.scrollTo(0, 0)\n    const refNode = refCanvasElement.current\n    setLoading(true)\n    htmlToImage(refNode)\n      .then(() => setLoading(false))\n  }\n\n  return (\n    <Hidden xsDown>\n      <AppBar position=\"static\" color=\"transparent\" elevation={0}>\n        <Divider />\n        <Box py={2} px={3}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"large\"\n            fullWidth\n            startIcon={<GetAppIcon />}\n            disabled={loading}\n            onClick={handleDownload}\n          >\n            {loading ? (<CircularProgress size={28} />) : ('Descargar')}\n          </Button>\n        </Box>\n      </AppBar>\n    </Hidden>\n  )\n}\n\nexport default Footer","import { Box, Checkbox, FormControlLabel } from '@material-ui/core'\nimport { useRecoilState } from 'recoil'\nimport { appShowSloganState } from 'store/app/atoms'\n\nconst SloganCheckbox = () => {\n  const [showSlogan, setShowSlogan] = useRecoilState(appShowSloganState)\n  return (\n    <Box py={1} px={3}>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={showSlogan}\n            onChange={() => setShowSlogan(!showSlogan)}\n            name=\"checkedSlogan\" \n          />\n        }\n        label=\"Mostrar isotipo y frase\"\n      />      \n    </Box>\n  )\n}\n\nexport default SloganCheckbox\n","const slogans = [\n  {\n    id: '120',\n    name: '120',\n    text: '120 AÑOS'\n  },\n  {\n    id: '1901',\n    name: '1901',\n    text: '1901 - 2021'\n  },\n  {\n    id: 'alianza',\n    name: 'alianza',\n    text: 'ALIANZA'\n  }\n]\n\nexport default slogans","import { Button, Box, Grid, Typography } from '@material-ui/core'\nimport { useRecoilState } from 'recoil'\nimport { appSloganState } from 'store/app/atoms'\nimport slogans from 'utils/data/slogans'\nconst Slogan = () => {\n  const [slogan, setSlogan] = useRecoilState(appSloganState)\n  return (\n    <Box py={2} px={3}>\n      <Box mb={1}>\n        <Typography variant=\"h6\" color=\"primary\">\n          <strong>ISOTIPO</strong>\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          Selecciona una opción\n        </Typography>\n      </Box>\n      <Grid container spacing={1}>\n        {slogans.map((item: any) => \n          <Grid key={item.id} item xs={4}>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              disableElevation\n              size=\"large\"\n              color={slogan === item.text ? 'primary' : 'default'}\n              onClick={() => setSlogan(item.text)}\n            >\n              {item.name}\n            </Button>\n          </Grid>\n        )}\n      </Grid>\n    </Box>\n  )\n}\n\nexport default Slogan\n","import { Box, TextField, Typography } from '@material-ui/core'\nimport { useRecoilState } from 'recoil'\nimport { appQuoteState } from 'store/app/atoms'\nconst maxCharacters = 19\nconst Quote = () => {\n  const [quote, setQuote] = useRecoilState(appQuoteState)\n  const handleQuote = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value.toUpperCase()\n    if (maxCharacters > value.length) setQuote(value)    \n  }\n\n  return (\n    <Box py={2} px={3}>\n      <Box mb={1}>\n        <Typography variant=\"h6\" color=\"primary\">\n          <strong>UNA FRASE</strong>\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          Una frase que exprese tu sentimiento\n        </Typography>\n      </Box>\n      <TextField\n        placeholder=\"Por ejm: ¡ARRIBA ALIANZA!\"\n        value={quote}\n        variant=\"outlined\"\n        fullWidth\n        onChange={handleQuote}\n      />\n    </Box>\n  )\n}\n\nexport default Quote\n","import { Box, TextField, Typography } from '@material-ui/core'\nimport { useRecoilState } from 'recoil'\nimport { appNameState } from 'store/app/atoms'\nconst maxCharacters = 12\nconst Name = () => {\n  const [name, setName] = useRecoilState(appNameState)\n  const handleName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value.toUpperCase()\n    const regExp = /^[a-zA-Z.\\b ]+$/\n    if (value === '' || regExp.test(value)) {\n      if (maxCharacters > value.length) setName(value)    \n    }\n  }\n\n  return (\n    <Box py={2} px={3}>\n      <Box mb={1}>\n        <Typography variant=\"h6\" color=\"primary\">\n          <strong>NOMBRE</strong>\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          Nombre de tu camiseta\n        </Typography>\n      </Box>\n      <TextField\n        placeholder=\"Por ejm: FARFAN\"\n        value={name}\n        variant=\"outlined\"\n        fullWidth\n        onChange={handleName}\n      />\n    </Box>\n  )\n}\n\nexport default Name\n","import { Box, Button } from '@material-ui/core'\n\ntype Props = {\n  item?: Number\n  color?: any\n  variant?: any\n  onClick: React.MouseEventHandler<HTMLButtonElement>\n}\n\nconst NumberItem: React.FC<Props> = ({ item, color, variant, onClick }) => {\n  return (\n    <Button\n      onClick={onClick}\n      variant={variant}\n      color={color}\n      disableElevation\n      size=\"small\"\n      fullWidth\n    >\n      <Box\n        fontSize={25}\n        fontWeight=\"bold\"\n      >\n        {item}\n      </Box>\n    </Button>\n  )\n}\n\nexport default NumberItem\n","import { Box, Grid, InputAdornment, TextField, Typography } from '@material-ui/core'\nimport { useRecoilState } from 'recoil'\nimport { appNumberState } from 'store/app/atoms'\nimport NumberItem from './NumberItem'\nconst tshirtNumbers = [7, 8, 9, 10].map(key => key)\nconst maxCharacters = 2\nconst Number = () => {\n  const [number, setNumber] = useRecoilState(appNumberState)\n  const getVariant = (value: Number) => number === value  ? 'contained' : 'outlined'\n  const getColor = (value: Number) => number === value  ? 'primary' : 'inherit'\n\n  const handleNumber = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value\n    if (maxCharacters >= value.length) setNumber(parseFloat(value) || 0)\n  }\n\n  return (\n    <Box py={2} px={3}>\n      <Box mb={1}>\n        <Typography variant=\"h6\" color=\"primary\">\n          <strong>NÚMERO</strong>\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          Selecciona tu número favorito\n        </Typography>\n      </Box>\n      <Grid container spacing={1}>\n        {tshirtNumbers.map((number: Number) => (\n          <Grid\n            key={number.toString()}\n            xs={3}\n            item\n          >\n            {<NumberItem \n              onClick={() => setNumber(number)}\n              variant={getVariant(number)}\n              color={getColor(number)}\n              item={number}\n            />}\n          </Grid>\n        ))}\n      </Grid>\n      <Box mt={2} />\n      <TextField\n        label=\"O ingresa un número 1 - 99\"\n        value={number}\n        variant=\"outlined\"\n        fullWidth\n        InputLabelProps={{ shrink: true }}\n        inputProps={{ \n          inputMode: 'numeric',\n        }}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\"><strong>#</strong></InputAdornment>\n        }}\n        onChange={handleNumber}\n      />\n    </Box>\n  )\n}\n\nexport default Number\n","import { Box, Button, Grid, Typography } from '@material-ui/core'\nimport { useRecoilState, useSetRecoilState } from 'recoil'\nimport { appPresentationState, appColorState } from 'store/app/atoms'\nimport { IPresentation } from 'store/types/presentation'\nimport presentations from 'utils/data/presentations'\nimport colors from 'utils/data/colors'\n\nconst Tshirt = () => {\n  const [presentation, setPresentation] = useRecoilState(appPresentationState)\n  const setColor = useSetRecoilState(appColorState)\n  const handlePresentation = (item: IPresentation) => {\n    const color = colors.find(({ id }) => id === item.id)\n    setColor(color)\n    setPresentation(item)\n  }\n  return (\n    <Box py={2} px={3}>\n      <Box mb={1}>\n        <Typography variant=\"h6\" color=\"primary\">\n          <strong>CAMISETA</strong>\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          Selecciona el tipo de presentación\n        </Typography>\n      </Box>\n      <Grid container spacing={1}>\n        {presentations.filter(item => item.active)\n          .map((item: IPresentation) => \n          <Grid key={item.id} item xs={6}>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              disableElevation\n              size=\"large\"\n              color={presentation?.id === item.id ? 'primary' : 'default'}\n              onClick={() => handlePresentation(item)}\n            >\n              {item.name}\n            </Button>\n          </Grid>\n        )}\n      </Grid>\n    </Box>\n  )\n}\n\nexport default Tshirt\n","import { Box, Button, Grid, Typography } from '@material-ui/core'\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined'\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\nimport { useRecoilState } from 'recoil'\nimport { appColorState } from 'store/app/atoms'\nimport colors from 'utils/data/colors'\nimport { IColor } from 'store/types/color'\n\nconst Color = () => {\n  const [color, setColor] = useRecoilState(appColorState)\n  const getStyle = (color: IColor) => ({ \n    backgroundColor: color.color,\n    color: color.dark ? 'white' : 'black'\n  })\n  return (\n    <Box py={2} px={3}>\n      <Box mb={1}>\n        <Typography variant=\"h6\" color=\"primary\">\n          <strong>COLOR DE FONDO</strong>\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          Selecciona tu color favorito\n        </Typography>\n      </Box>\n      <Grid container spacing={1}>\n        {colors.filter(item => item.active)\n          .map((item: IColor) => \n          <Grid key={item.id} item xs={4}>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              disableElevation\n              size=\"large\"\n              style={getStyle(item)}\n              onClick={() => setColor(item)}\n            >\n              {color?.id === item.id ? (\n                <CheckOutlinedIcon />\n              ) : (\n                <RadioButtonUncheckedIcon />\n              )}\n            </Button>\n          </Grid>\n        )}\n      </Grid>\n    </Box>\n  )\n}\n\nexport default Color\n","import { Box, Drawer, Divider } from '@material-ui/core'\nimport { useRecoilState } from 'recoil'\nimport { globalSidebarState } from 'store/global/atoms'\nimport { appShowSloganState } from 'store/app/atoms'\nimport { useStyles } from './Sidebar.styles'\nimport Header from './Header'\nimport Footer from './Footer'\nimport SloganCheckbox from './SloganCheckbox'\nimport Slogan from './Slogan'\nimport Quote from './Quote'\nimport Name from './Name'\nimport Number from './Number'\nimport Tshirt from './Tshirt'\nimport Color from './Color'\n\ntype TProps = {\n  refCanvasElement: React.RefObject<HTMLElement>\n}\n\nconst Sidebar = ({ refCanvasElement }: TProps) => {\n  const [sidebar] = useRecoilState(globalSidebarState)\n  const [showSlogan] = useRecoilState(appShowSloganState)\n  const classes = useStyles()\n  return (\n    <Drawer\n      variant=\"persistent\"\n      open={sidebar}\n      classes={{\n        paper: classes.drawerPaper\n      }}\n      anchor=\"right\"\n    >\n      <Header />\n      <Box className={classes.box}>\n        <SloganCheckbox />\n        <Divider />\n        {showSlogan && (\n          <>\n            <Slogan />\n            <Divider />\n            <Quote />\n            <Divider />\n          </>\n        )}\n        <Name />\n        <Divider />\n        <Number />\n        <Divider />\n        <Tshirt />\n        <Divider />\n        <Color />\n      </Box>\n      <Footer refCanvasElement={refCanvasElement} />\n    </Drawer>\n  )\n}\n\nexport default Sidebar\n","import { createStyles, makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      color: 'white'\n    },\n    grow: {\n      flexGrow: 1\n    }\n  })\n)","import React from 'react'\nimport {\n  Avatar,\n  AppBar,\n  Box,\n  Dialog,\n  DialogContent,\n  IconButton,\n  Link,\n  Paper,\n  Toolbar,\n  Typography\n}\nfrom '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport PanToolOutlinedIcon from '@material-ui/icons/PanToolOutlined'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { useTheme } from '@material-ui/core/styles'\nimport SocialNetworks from './SocialNetworks'\nimport { useStyles } from './BrandDialog.styles'\n\nconst InfoDialog = () => {\n  const [open, setOpen] = React.useState(false)\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'))\n  const classes = useStyles()\n  return (\n    <>\n      <IconButton \n        edge=\"start\"\n        onClick={() => setOpen(true)}\n      >\n        <Avatar className={classes.avatar}>B</Avatar>\n      </IconButton>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <AppBar \n          position=\"relative\"\n          color=\"transparent\"\n          elevation={0}\n        >\n          <Toolbar>\n            <Typography variant=\"h6\">\n              <strong>{process.env.REACT_APP_NAME}</strong> <small>{process.env.REACT_APP_VERSION}</small>\n            </Typography>\n            <Box flexGrow={1} />\n            <IconButton\n              edge=\"end\"\n              color=\"inherit\"\n              aria-label=\"close\"\n              onClick={() => setOpen(false)}\n            >\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <DialogContent>\n          <Typography variant=\"body2\">\n            Personaliza la camiseta de Alianza Lima con tu nombre y número, color de fondo favorito, tipo de presentación y descarga tu camiseta como imagen JPEG.\n          </Typography>\n          <br />\n          <SocialNetworks />\n          <br />\n          <Paper variant=\"outlined\">\n            <Box p={3}>\n              <Box pb={2}>\n                <PanToolOutlinedIcon color=\"secondary\" fontSize=\"large\" />\n              </Box>\n              <Typography variant=\"body2\">\n                <strong>COMPRA TU CAMISETA</strong>\n                <br />\n                BLANQUIAZUL.com no vende camisetas. Visita las tiendas oficiales de Nike <Link color=\"secondary\" href={process.env.REACT_APP_NIKE} rel=\"noreferrer\" target=\"_blank\">aquí</Link>. \n                Los logotipos de las marcas auspiciadoras le pertenecen a <Link color=\"secondary\" href={process.env.REACT_APP_AOC} target=\"_blank\" rel=\"noreferrer\">AOC</Link> y <Link color=\"secondary\" href={process.env.REACT_APP_DORADOBET} target=\"_blank\" rel=\"noreferrer\">Dorado Bet</Link> respectivamente.\n              </Typography>\n            </Box>\n          </Paper>\n          <br />\n        </DialogContent>\n      </Dialog>\n    </>\n  )\n}\n\nexport default InfoDialog","import IconButton from '@material-ui/core/IconButton'\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined'\nconst ShareButton = () => {\n  const handleShare = () => {\n    if (navigator.share) {\n      navigator.share({\n        title: document.title,\n        url: window.location.href\n      })\n      .then()\n      .catch()\n    }\n  }\n\n  return (\n    <IconButton color=\"inherit\" onClick={handleShare}>\n      <ShareOutlinedIcon />\n    </IconButton>\n  )\n}\n\nexport default ShareButton\n","import { AppBar, Button, Toolbar } from '@material-ui/core'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\nimport Slide from '@material-ui/core/Slide'\nimport { useRecoilState } from 'recoil'\nimport { globalSidebarState, globalPreviewState } from 'store/global/atoms'\nimport { useStyles } from './Header.styles'\nimport BrandDialog from './BrandDialog'\nimport ShareButton from './ShareButton'\nimport isMobile from 'ismobilejs'\n\nconst Navbar = () => {\n  const [preview] = useRecoilState(globalPreviewState)\n  const [sidebar, setSidebar] = useRecoilState(globalSidebarState)\n  const device = isMobile(window.navigator)\n  const deviceIsMobile = device.phone || device.tablet\n  const classes = useStyles()\n  return (\n    <Slide appear={false} direction=\"down\" in={!preview}>\n      <AppBar\n        position=\"fixed\"\n        elevation={0}\n        className={classes.root}\n        color=\"transparent\"\n      >\n        <Toolbar>\n          <BrandDialog />\n          {deviceIsMobile && (\n            <ShareButton />\n          )}\n          <div className={classes.grow}/>\n          <Button\n            color=\"inherit\" \n            endIcon={<ArrowForwardIcon />}\n            onClick={() => setSidebar(!sidebar)}\n          >\n            Personaliza\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </Slide>\n  )\n}\n\nexport default Navbar\n","import { makeStyles, createStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles((theme) =>\n  createStyles({\n    root: ({ color }: any) => ({\n      background: color.color,\n      position: 'relative',\n      '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        background: 'rgba(0, 0, 0, .6)',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0\n      }\n    }),\n    darkButton: {\n      borderRadius: 25,\n      borderColor: 'rgba(255, 255, 255, .85)',\n      color: 'rgba(255, 255, 255, .85)',\n      paddingLeft: 35,\n      paddingRight: 35\n    }\n  })\n)","import { Box, Button } from '@material-ui/core'\nimport { useRecoilState } from 'recoil'\nimport { globalPreviewState } from 'store/global/atoms'\nimport { appColorState } from 'store/app/atoms'\nimport { useStyles } from './PreviewButton.styles'\n\nconst Preview = () => {\n  const [preview, setPreview] = useRecoilState(globalPreviewState)\n  const [color] = useRecoilState(appColorState)\n  const classes = useStyles({ color })\n  return (\n    <Box \n      p={2} \n      className={classes.root}\n      display={preview ? 'none' : 'block'}\n      textAlign=\"center\"\n    >\n      <Button\n        variant=\"outlined\"\n        onClick={() => setPreview(!preview)}\n        className={classes.darkButton}\n      >\n        Previsualizar\n      </Button>\n    </Box>\n  )\n}\n\nexport default Preview\n","import React from 'react'\nimport { Box, CircularProgress, Fab } from '@material-ui/core'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { useRecoilState } from 'recoil'\nimport { globalPreviewState } from 'store/global/atoms'\nimport { htmlToImage } from 'utils/helpers'\nimport Slide from '@material-ui/core/Slide'\n\n\ntype TProps = {\n  refCanvasElement: React.RefObject<HTMLElement>\n}\n\nconst DownloadButton = ({ refCanvasElement }: TProps) => {\n  const [preview, setPreview] = useRecoilState(globalPreviewState)\n  const [loading, setLoading] = React.useState<boolean>(false)\n\n  const handleClose = () => {\n    setPreview(!preview)\n  }\n\n  const handleDownload = () => {\n    const refNode = refCanvasElement.current\n    setLoading(true)\n    htmlToImage(refNode)\n      .then(() => setLoading(false))\n  }\n\n  return (\n    <Slide appear={false} direction=\"up\" in={preview}>\n      <Box \n        p={2} \n        position=\"fixed\"\n        bottom={0}\n        textAlign=\"center\"\n        width=\"100%\"\n        color=\"white\"\n        zIndex={1000}\n      >\n        <Fab\n          size=\"medium\"\n          color=\"primary\"\n          onClick={handleClose}>\n          <CloseIcon />\n        </Fab>\n        <Box component=\"span\" mr={1} />\n        <Fab\n          size=\"medium\"\n          color=\"secondary\"\n          onClick={handleDownload}\n          disabled={loading}\n        >\n          {loading ? (<CircularProgress size={28} />) : (<GetAppIcon />)}\n        </Fab>\n      </Box>\n    </Slide>\n  )\n}\n\nexport default DownloadButton\n","import React, { lazy, Suspense } from 'react'\nimport { Box, CircularProgress, Hidden } from '@material-ui/core'\nimport { useRecoilState } from 'recoil'\nimport { appColorState } from 'store/app/atoms'\nimport { useStyles } from './Home.styles'\nimport Sidebar from 'components/Sidebar'\nimport Header from 'components/Header'\nimport PreviewButton from './PreviewButton'\nimport DownloadButton from './DownloadButton'\nconst TShirt = lazy(() => import('components/Sketch/TShirt'))\nconst Home = () => {\n  const [color] = useRecoilState(appColorState)\n  const classes = useStyles({ color })\n  const refCanvasElement = React.useRef<HTMLElement>(null)\n\n  return (\n    <>\n      <Header />\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        className={classes.container}\n        {...{ ref: refCanvasElement }}\n      >\n        <Suspense fallback={<CircularProgress className={classes.spinner} />}>\n          <TShirt />\n        </Suspense>\n      </Box>\n      <Sidebar refCanvasElement={refCanvasElement} />\n      <Hidden smUp>\n        <DownloadButton refCanvasElement={refCanvasElement} />\n        <PreviewButton />\n      </Hidden>\n    </>\n  )\n}\n\nexport default Home","const sketches = [\n  {\n    id: 'main',\n    component: 'Main',\n    name: '3D',\n    active: true\n  },\n  {\n    id: 'minimalist',\n    component: 'Minimalist',\n    name: 'Minimalista',\n    active: false\n  },\n  {\n    id: 'artistic',\n    component: 'Artistic',\n    name: 'Artístico',\n    active: false\n  }\n]\n\nexport default sketches","import { atom } from 'recoil'\nimport { IApp } from 'store/types/app'\nimport presentations from 'utils/data/presentations'\nimport sketches from 'utils/data/sketches'\nimport colors from 'utils/data/colors'\n\nconst presentation = presentations.find(({ id }) => id === 'secondary')\nconst sketch = sketches.find(({ id }) => id === 'main')\nconst color = colors.find(({ id }) => id === 'grey')\nconst name = 'FARFAN'\nconst number = 10\nconst quote = '¡ARRIBA ALIANZA!'\nconst slogan = '120 AÑOS'\nconst showSlogan = true\nconst app: IApp = {\n  name,\n  number,\n  color,\n  presentation,\n  sketch,\n  quote,\n  slogan,\n  showSlogan\n}\n\nexport const appNameState = atom({\n  key: 'appName',\n  default: app.name\n})\n\nexport const appNumberState = atom({\n  key: 'appNumber',\n  default: app.number\n})\n\nexport const appPresentationState = atom({\n  key: 'appPresentation',\n  default: app.presentation\n})\n\nexport const appSketchState = atom({\n  key: 'appSketch',\n  default: app.sketch\n})\n\nexport const appColorState = atom({\n  key: 'appColor',\n  default: app.color\n})\n\nexport const appQuoteState = atom({\n  key: 'appQuote',\n  default: app.quote\n})\n\nexport const appSloganState = atom({\n  key: 'appSlogan',\n  default: app.slogan\n})\n\nexport const appShowSloganState = atom({\n  key: 'appShowSlogan',\n  default: app.showSlogan\n})"],"sourceRoot":""}