{"version":3,"sources":["theme.ts","components/Spinner.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","typography","fontFamily","join","fontWeightSemiBold","fontWeightBold","props","MuiButton","disableElevation","palette","primary","main","secondary","Spinner","Box","height","width","display","justifyContent","alignItems","textAlign","CircularProgress","Home","React","lazy","App","muiTheme","createMuiTheme","useEffect","ReactGA","initialize","process","pageview","window","location","pathname","ThemeProvider","responsiveFontSizes","CssBaseline","Suspense","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8MA0BeA,EA1BD,CACZC,WAAY,CACVC,WAAY,CACV,aACA,mBACA,QACA,cACAC,KAAK,KACPC,mBAAoB,IACpBC,eAAgB,KAElBC,MAAO,CACLC,UAAW,CACTC,kBAAkB,IAGtBC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,a,uBCHGE,EAhBC,WACd,OACE,cAACC,EAAA,EAAD,CACEC,OAAO,QACPC,MAAM,OACNC,QAAQ,OACRC,eAAe,SACfC,WAAW,SALb,SAOE,cAACL,EAAA,EAAD,CAAKM,UAAU,SAAf,SACE,cAACC,EAAA,EAAD,SCHFC,EAAOC,IAAMC,MAAK,kBAAM,uDAsBfC,EApBH,WACV,IAAMC,EAAWC,YAAe,eAAK3B,IAOrC,OALAuB,IAAMK,WAAU,WACdC,IAAQC,WAAWC,kBACnBF,IAAQG,SAASC,OAAOC,SAASC,YAChC,IAGD,eAACC,EAAA,EAAD,CAAepC,MAAOqC,YAAoBX,GAA1C,UACE,cAACY,EAAA,EAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAMC,SAAP,CAAgBC,SAAU,cAAC,EAAD,IAA1B,SACE,cAAClB,EAAD,YCVKmB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCLdQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0bb4ea40.chunk.js","sourcesContent":["const theme = {\n  typography: {\n    fontFamily: [\n      'Montserrat',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif'\n    ].join(','),\n    fontWeightSemiBold: 700,\n    fontWeightBold: 900\n  },\n  props: {\n    MuiButton: {\n      disableElevation: true,\n    },\n  },\n  palette: {\n    primary: {\n      main: '#060915',\n    },\n    secondary: {\n      main: '#E12921',\n    }  \n  }\n}\n\nexport default theme","import { Box, CircularProgress } from '@material-ui/core'\n\nconst Spinner = () => {\n  return (\n    <Box \n      height=\"100vh\" \n      width=\"100%\"\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Box textAlign=\"center\">\n        <CircularProgress />\n      </Box>\n    </Box>\n  )\n}\n\nexport default Spinner\n","import React from 'react'\nimport ReactGA from 'react-ga'\nimport { RecoilRoot } from 'recoil'\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport theme from './theme'\nimport Spinner from 'components/Spinner'\n\nconst Home = React.lazy(() => import('./pages/Home'))\n\nconst App = () => {\n  const muiTheme = createMuiTheme({ ...theme })\n\n  React.useEffect(() => {\n    ReactGA.initialize(process.env.REACT_APP_GA || '')\n    ReactGA.pageview(window.location.pathname)\n  }, [])\n  \n  return(\n    <ThemeProvider theme={responsiveFontSizes(muiTheme)}>\n      <CssBaseline />\n      <RecoilRoot>\n        <React.Suspense fallback={<Spinner />}>\n          <Home />\n        </React.Suspense>\n      </RecoilRoot>\n    </ThemeProvider>\n  )\n}\n\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}