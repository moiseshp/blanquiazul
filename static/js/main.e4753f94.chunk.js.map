{"version":3,"sources":["store/sidebar/atoms.ts","components/Sidebar/Sidebar.styles.ts","components/Sidebar/Header.tsx","utils/themes.ts","utils/tshirts.ts","utils/screens.ts","store/skin/atoms.ts","hooks/useBreakpoint.tsx","components/Sidebar/AspectRatio.tsx","components/Sidebar/Footer.tsx","components/Sidebar/Name.tsx","components/Sidebar/NumberItem.tsx","components/Sidebar/Number.tsx","store/tshirts/atoms.ts","components/Sidebar/Tshirt.tsx","store/themes/atoms.ts","components/Sidebar/Theme.tsx","components/Sidebar/index.tsx","components/Header/Header.styles.ts","components/Header/index.tsx","pages/Home/Home.styles.ts","pages/Home/TshirtName/TshirtName.styles.ts","pages/Home/TshirtName/index.tsx","pages/Home/TshirtNumber/TshirtNumber.styles.ts","pages/Home/TshirtNumber/index.tsx","pages/Home/index.tsx","theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["sidebarIsActiveState","atom","key","default","useStyles","makeStyles","muitheme","createStyles","drawerPaper","width","breakpoints","up","box","borderTopStyle","borderTopWidth","borderTopColor","palette","grey","height","overflow","scrollbarColor","scrollbarWidth","boxShadow","borderRadius","backgroundColor","Header","useRecoilState","sidebarIsActive","setSidebarIsActive","AppBar","position","color","elevation","Toolbar","Typography","variant","Date","getFullYear","process","Box","flexGrow","IconButton","onClick","edge","Close","themes","id","name","light","base","dark","isDark","tshirts","source","screens","icon","tshirt","paddingTop","marginTop","marginLeft","top","fontSize","number","defaultName","theme","find","skin","screen","skinNameState","skinNumberState","skinTshirtState","skinThemeState","skinScreenState","useBreakpoint","useTheme","keys","reverse","reduce","output","matches","useMediaQuery","MuiIcon","Component","Icons","AspectRatio","setScreen","breakpoint","React","useEffect","screenId","includes","getScreen","Grid","container","spacing","map","item","xs","Button","disableElevation","size","fullWidth","p","Hidden","smDown","pb","Name","setName","mb","TextField","placeholder","value","onChange","event","target","toUpperCase","NumberItem","fontWeight","tshirtNumbers","Array","Number","setNumber","useState","more","setMore","getVariant","getColor","style","display","handleNumber","toString","mt","items","tshirtsState","Tshirt","getStyles","disabled","CheckOutlined","RadioButtonUnchecked","themesState","Theme","setTheme","Sidebar","classes","Drawer","open","paper","anchor","className","Divider","Footer","root","grow","iconButton","Navbar","Link","href","TuneOutlined","muiTheme","background","primary","main","content","padding","left","transform","zIndex","bottom","right","tshirtWrapper","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","margin","border","textAlign","secondary","fontFamily","textShadow","letterSpacing","TshirtName","TshirtNumber","Home","typography","join","fontWeightSemiBold","fontWeightBold","button","props","MuiButton","App","createMuiTheme","ReactGA","initialize","pageview","window","location","pathname","ThemeProvider","responsiveFontSizes","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4753f94.chunk.js","sourcesContent":["import { atom } from 'recoil'\nimport { ISidebar } from 'store/types/sidebar'\n\nconst sidebar: ISidebar = {\n  isActive: false\n}\n\nexport const sidebarIsActiveState = atom({\n  key: 'sidebarIsActive',\n  default: sidebar.isActive\n})","import { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles((muitheme: Theme) =>\n  createStyles({\n    drawerPaper: {\n      width: '100%',\n      [muitheme.breakpoints.up('sm')]: {\n        width: 320,\n      }\n    },\n    box: {\n      borderTopStyle: 'solid',\n      borderTopWidth: 1,\n      borderTopColor: muitheme.palette.grey[200],\n      height: '100%',\n      overflow: 'auto',\n      scrollbarColor: `${muitheme.palette.grey[400]} ${muitheme.palette.grey[100]}`,\n      scrollbarWidth: 'thin',\n      [muitheme.breakpoints.up('sm')]: {\n        '&::-webkit-scrollbar-track': {\n          boxShadow: 'inset 0 0 6px rgba(0,0,0,0.1)',\n          borderRadius: 10,\n          backgroundColor: muitheme.palette.grey[100],\n        },\n        '&::-webkit-scrollbar': {\n          width: 6,\n          height: 6,\n          backgroundColor: muitheme.palette.grey[400]\n        },\n        '&::-webkit-scrollbar-thumb': {\n          borderRadius: 10,\n          boxShadow: 'inset 0 0 6px rgba(0,0,0,.1)',\n          backgroundColor: muitheme.palette.grey[400],\n        }\n      }\n    }\n  })\n)","import { AppBar, Box, IconButton, Toolbar, Typography } from '@material-ui/core'\nimport { Close as CloseIcon } from '@material-ui/icons'\nimport { useRecoilState } from 'recoil'\nimport { sidebarIsActiveState } from 'store/sidebar/atoms'\n\nconst Header = () => {\n  const [sidebarIsActive, setSidebarIsActive] = useRecoilState(sidebarIsActiveState)\n  return (\n    <AppBar position=\"static\" color=\"transparent\" elevation={0}>\n      <Toolbar>\n        <Typography variant=\"body1\">\n          <strong>{(new Date()).getFullYear()} &copy; </strong> {process.env.REACT_APP_NAME}\n        </Typography>\n        <Box flexGrow={1} />\n        <IconButton\n          onClick={() => setSidebarIsActive(!sidebarIsActive)}\n          color=\"inherit\"\n          edge=\"end\"\n        >\n          <CloseIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Header\n","const themes = [\n  {\n    id: 'main',\n    name: 'Azul',\n    color: {\n      light: '#5C6477',\n      base: '#2E3548',\n      dark: '#060915',\n    },\n    isDark: true\n  },\n  {\n    id: 'dark',\n    name: 'Negro',\n    color: {\n      light: '#777',\n      base: '#222',\n      dark: '#000'\n    },\n    isDark: true\n  },\n  {\n    id: 'light',\n    name: 'Gris',\n    color: {\n      light: '#fff',\n      base: '#efefef',\n      dark: '#9ba0a5'\n    },\n    isDark: false\n  },\n  {\n    id: 'cyan',\n    name: 'Cyan',\n    color: {\n      light: '#90E0EF',\n      base: '#0077B6',\n      dark: '#023E8A'\n    },\n    isDark: true\n  },\n  {\n    id: 'sky',\n    name: 'sky',\n    color: {\n      light: '#CAF0F8',\n      base: '#90E0EF',\n      dark: '#0096C7'\n    },\n    isDark: true\n  },\n  {\n    id: 'yellow',\n    name: 'Yellow',\n    color: {\n      light: '#A979F6',\n      base: '#7209B7',\n      dark: '#560BAD'\n    },\n    isDark: true\n  }\n]\n\nexport default themes","const tshirts = [\n  {\n    id: 'main',\n    name: 'Principal',\n    color: '#2E3548',\n    source: 'TShirtMain.png',\n    isDark: true\n  },\n  {\n    id: 'secondary',\n    name: 'Alterna',\n    color: '#ddd',\n    source: '',\n    isDark: true\n  }\n]\n\nexport default tshirts","const screens = [\n  {\n    id: 'small',\n    width: 360,\n    height: 720,\n    icon: 'PhoneIphone',\n    tshirt: {\n      paddingTop: 10,\n      height: 450,\n      width: 360,\n      marginTop: -225,\n      marginLeft: -180,\n      name: {\n        top: 120,\n        fontSize: 50\n      },\n      number: {\n        top: 230,\n        fontSize: 210  \n      }\n    }\n  },\n  {\n    id: 'medium',\n    width: 675,\n    height: 675,\n    icon: 'FlipToFrontOutlined',\n    tshirt: {\n      paddingTop: 10,\n      height: 495,\n      width: 396,\n      marginTop: -247,       \n      marginLeft: -198,\n      name: {\n        top: 133,\n        fontSize: 53\n      },\n      number: {\n        top: 255,\n        fontSize: 240  \n      }\n    }\n  },\n  {\n    id: 'large',\n    width: '100%',\n    height: '100%',\n    icon: 'AspectRatio',\n    tshirt: {\n      paddingTop: 25,\n      height: 600,\n      width: 480,\n      marginTop: -300,  \n      marginLeft: -240,\n      name: {\n        top: 162,\n        fontSize: 67\n      },\n      number: {\n        top: 310,\n        fontSize: 290  \n      }\n    }\n  }\n]\n\nexport default screens","import { atom } from 'recoil'\nimport { ISkin } from 'store/types/skin'\nimport themes from 'utils/themes'\nimport tshirts from 'utils/tshirts'\nimport screens from 'utils/screens'\n\nconst defaultName = 'main'\nconst theme = themes.find(({ id }) => id === defaultName)\nconst tshirt = tshirts.find(({ id }) => id === defaultName)\nconst screen = screens.find(({ id }) => id === 'small')\n\nconst skin: ISkin = {\n  name: 'FARFAN',\n  number: 10,\n  screen,\n  theme,\n  tshirt,\n}\n\nexport const skinNameState = atom({\n  key: 'skinName',\n  default: skin.name\n})\n\nexport const skinNumberState = atom({\n  key: 'skinNumber',\n  default: skin.number\n})\n\nexport const skinTshirtState = atom({\n  key: 'skinTshirt',\n  default: skin.tshirt\n})\n\nexport const skinThemeState = atom({\n  key: 'skinTheme',\n  default: skin.theme\n})\n\nexport const skinScreenState = atom({\n  key: 'skinScreen',\n  default: skin.screen\n})\n","import { Theme, useTheme } from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { Breakpoint } from '@material-ui/core/styles/createBreakpoints'\n\ntype BreakpointOrNull = Breakpoint | null\n\n/**\n * Be careful using this hook. It only works because the number of\n * breakpoints in theme is static. It will break once you change the number of\n * breakpoints. See https://reactjs.org/docs/hooks-rules.html#only-call-hooks-at-the-top-level\n */\nconst useBreakpoint = () => {\n  const theme: Theme = useTheme()\n  const keys: Breakpoint[] = [...theme.breakpoints.keys].reverse()\n  return (\n    keys.reduce((output: BreakpointOrNull, key: Breakpoint) => {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const matches = useMediaQuery(theme.breakpoints.up(key))\n      return !output && matches ? key : output\n    }, null) || 'xs'\n  )\n}\n\nexport default useBreakpoint\n","import React from 'react'\nimport { Button, Grid } from '@material-ui/core'\nimport * as Icons from '@material-ui/icons'\nimport { useRecoilState } from 'recoil'\nimport { skinScreenState } from 'store/skin/atoms'\nimport screens from 'utils/screens'\nimport useBreakpoint from 'hooks/useBreakpoint'\ntype TIcon = {\n  icon?: string\n}\nconst MuiIcon = ({ icon }: TIcon) => {\n  const AllIcons: Record<string, any> = Icons\n  const Component = AllIcons[icon || 'PhoneIphone']\n  return <Component />\n}\n\nconst AspectRatio = () => {\n  const [screen, setScreen] = useRecoilState(skinScreenState)\n  const breakpoint = useBreakpoint()\n  \n  React.useEffect(() => {\n    let screenId = 'small' \n    if (['md'].includes(breakpoint)) screenId = 'medium'\n    if (['lg', 'xl'].includes(breakpoint)) screenId = 'large'\n    const getScreen = screens.find(screen => screen.id === screenId)\n    setScreen(getScreen)      \n  }, [breakpoint, setScreen])\n\n  return (\n    <Grid container spacing={1}>\n      {screens.map(item => (\n        <Grid\n          key={item.id}\n          xs={4}\n          item\n        >\n          <Button\n            disableElevation\n            variant={item.id === screen?.id ? 'contained' : 'outlined'}\n            color={item.id === screen?.id ? 'primary' : 'inherit'}\n            size=\"large\"\n            fullWidth\n            onClick={() => setScreen(item)}\n          >\n            <MuiIcon icon={item.icon} />\n          </Button>\n        </Grid>\n      ))}\n    </Grid>\n  )\n}\n\nexport default AspectRatio\n","import { AppBar, Box, Button, Hidden } from '@material-ui/core'\nimport AspectRatio from './AspectRatio'\n// import { useRecoilState } from 'recoil'\n// import { sidebarIsActiveState } from 'store/sidebar/atoms'\n\nconst Header = () => {\n  // const [sidebarIsActive, setSidebarIsActive] = useRecoilState(sidebarIsActiveState)\n  return (\n    <AppBar position=\"static\" color=\"transparent\" elevation={0}>\n      <Box p={2}>\n        <Hidden smDown>\n          <Box pb={1}>\n            <AspectRatio />\n          </Box>\n        </Hidden>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"large\"\n          fullWidth\n        >\n          Guardar imagen\n        </Button>\n      </Box>\n    </AppBar>\n  )\n}\n\nexport default Header\n","import { Box, TextField, Typography } from '@material-ui/core'\nimport { useRecoilState } from 'recoil'\nimport { skinNameState } from 'store/skin/atoms'\n\nconst Name = () => {\n  const [name, setName] = useRecoilState(skinNameState)\n  const handleName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value.toUpperCase())\n  }\n  return (\n    <Box p={2}>\n      <Box mb={1}>\n        <Typography variant=\"h6\" color=\"primary\">\n          <strong>NOMBRE</strong>\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          Nombre de tu camiseta\n        </Typography>\n      </Box>\n      <TextField\n        placeholder=\"Por ejm: FARFAN\"\n        value={name}\n        variant=\"outlined\"\n        fullWidth\n        onChange={handleName}\n      />\n    </Box>\n  )\n}\n\nexport default Name\n","import { Box, Button } from '@material-ui/core'\n\ntype Props = {\n  item?: Number\n  color?: any\n  variant?: any\n  onClick: React.MouseEventHandler<HTMLButtonElement>\n}\n\nconst NumberItem: React.FC<Props> = ({ item, color, variant, onClick }) => {\n  return (\n    <Button\n      onClick={onClick}\n      variant={variant}\n      color={color}\n      disableElevation\n      size=\"small\"\n      fullWidth\n    >\n      <Box\n        fontSize={25}\n        fontWeight=\"bold\"\n      >\n        {item}\n      </Box>\n    </Button>\n  )\n}\n\nexport default NumberItem\n","import { useState } from 'react'\nimport { Box, Button, Grid, Typography } from '@material-ui/core'\nimport { useRecoilState } from 'recoil'\nimport { skinNumberState } from 'store/skin/atoms'\nimport NumberItem from './NumberItem'\nconst tshirtNumbers = [...new Array(30).keys()].map(key => ++key)\nconst maxNumberToDisplay = 16\n\nconst Number = () => {\n  const [number, setNumber] = useRecoilState(skinNumberState)\n  const [more, setMore] = useState<boolean>(false)\n  const handleNumber = (value: Number) => setNumber(value)\n  const getVariant = (value: Number) => number === value  ? 'contained' : 'outlined'\n  const getColor = (value: Number) => number === value  ? 'primary' : 'inherit'\n  const getDisplay = (value: Number) => {\n    if (value > maxNumberToDisplay && !more) return 'none'\n    return 'block'\n  }\n  const handleMore = () => setMore(!more)\n  return (\n    <Box p={2}>\n      <Box mb={1}>\n        <Typography variant=\"h6\" color=\"primary\">\n          <strong>NÚMERO</strong>\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          Selecciona tu número favorito\n        </Typography>\n      </Box>\n      <Grid container spacing={1}>\n        {tshirtNumbers.map((number: Number) => (\n          <Grid\n            key={number.toString()}\n            style={{ display: getDisplay(number) }}\n            xs={3}\n            item\n          >\n            {<NumberItem \n              onClick={() => handleNumber(number)}\n              variant={getVariant(number)}\n              color={getColor(number)}\n              item={number}\n            />}\n          </Grid>\n        ))}\n      </Grid>\n      <Box mt={1}>\n        <Button\n          onClick={handleMore}\n          variant=\"outlined\"\n          size=\"small\"\n          fullWidth\n        >\n          {more ? (<span>Ver menos</span>) : (<span>Más números</span>)}\n        </Button>\n      </Box>\n    </Box>\n  )\n}\n\nexport default Number\n","import { atom } from 'recoil'\nimport { ITshirt } from 'store/types/tshirt'\nimport tshirts from 'utils/tshirts'\n\nconst items: Array<ITshirt> = tshirts\n\nexport const tshirtsState = atom({\n  key: 'appTshirts',\n  default: items\n})","import { Box, Button, Grid, Typography } from '@material-ui/core'\nimport { useRecoilState } from 'recoil'\nimport { tshirtsState } from 'store/tshirts/atoms'\nimport { skinTshirtState } from 'store/skin/atoms'\nimport {\n  CheckOutlined as CheckOutlinedIcon,\n  RadioButtonUnchecked as RadioButtonUncheckedIcon \n} from '@material-ui/icons'\n\nimport { ITshirt } from 'store/types/tshirt'\n\n// TODO: https://material-ui.com/es/styles/basics/\nconst Tshirt = () => {\n  const [tshirts] = useRecoilState(tshirtsState)\n  const [tshirt] = useRecoilState(skinTshirtState)\n  const getColor = (id: string | undefined) => tshirt?.id === id ? 'primary' : 'inherit' \n  const getStyles = (tshirt: ITshirt) => ({\n    backgroundColor: tshirt.color,\n    color: tshirt.isDark ? 'white' : 'black'\n  }) \n  return (\n    <Box p={2}>\n      <Box mb={1}>\n        <Typography variant=\"h6\" color=\"primary\">\n          <strong>CAMISETA</strong>\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          Selecciona el tipo de presentación\n        </Typography>\n      </Box>\n      <Grid container spacing={1}>\n        {tshirts.map((item: ITshirt) => \n          <Grid key={item.id} item xs={6}>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              style={getStyles(item)}\n              disableElevation\n              size=\"large\"\n              color={getColor(item.id)}\n              disabled={item.id === 'secondary'}\n            >\n              {tshirt?.id === item.id ? (\n                <CheckOutlinedIcon />\n              ) : (\n                <RadioButtonUncheckedIcon />\n              )}\n            </Button>\n          </Grid>\n        )}\n      </Grid>\n    </Box>\n  )\n}\n\nexport default Tshirt\n","import { atom } from 'recoil'\nimport { ITheme } from 'store/types/theme'\nimport themes from 'utils/themes'\n\nconst items: Array<ITheme> = themes\n\nexport const themesState = atom({\n  key: 'appThemes',\n  default: items\n})","import { Box, Button, Grid, Typography } from '@material-ui/core'\nimport { useRecoilState } from 'recoil'\nimport { themesState } from 'store/themes/atoms'\nimport { skinThemeState } from 'store/skin/atoms'\nimport { ITheme } from 'store/types/theme'\nimport {\n  CheckOutlined as CheckOutlinedIcon,\n  RadioButtonUnchecked as RadioButtonUncheckedIcon \n} from '@material-ui/icons'\n\nconst Theme = () => {\n  const [themes] = useRecoilState(themesState)\n  const [theme, setTheme] = useRecoilState(skinThemeState)\n  const getStyles = (theme: ITheme) => ({\n    backgroundColor: theme.color?.base,\n    color: theme.isDark ? 'white' : 'black'\n  }) \n  return (\n    <Box p={2}>\n      <Box mb={1}>\n        <Typography variant=\"h6\" color=\"primary\">\n          <strong>BACKGROUND</strong>\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          Selecciona el color de fondo\n        </Typography>\n      </Box>\n      <Grid container spacing={1}>\n        {themes.map((item: ITheme) => \n          <Grid key={item.id} item xs={4}>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              style={getStyles(item)}\n              disableElevation\n              size=\"large\"\n              onClick={() => setTheme(item)}\n            >\n              {theme?.id === item.id ? (\n                <CheckOutlinedIcon />\n              ) : (\n                <RadioButtonUncheckedIcon />\n              )}\n            </Button>\n          </Grid>\n        )}\n      </Grid>\n    </Box>\n  )\n}\n\nexport default Theme\n","import { Box, Drawer, Divider } from '@material-ui/core'\nimport { useRecoilState } from 'recoil'\nimport { sidebarIsActiveState } from 'store/sidebar/atoms'\nimport { useStyles } from './Sidebar.styles'\nimport Header from './Header'\nimport Footer from './Footer'\nimport Name from './Name'\nimport Number from './Number'\nimport Tshirt from './Tshirt'\nimport Theme from './Theme'\nconst Sidebar = () => {\n  const [sidebarIsActive] = useRecoilState(sidebarIsActiveState)\n  const classes = useStyles()\n  return (\n    <Drawer\n      variant=\"persistent\"\n      open={sidebarIsActive}\n      classes={{\n        paper: classes.drawerPaper\n      }}\n      anchor=\"right\"\n    >\n      <Header />\n      <Box className={classes.box}>\n        <Divider />\n        <Name />\n        <Divider />\n        <Number />\n        <Divider />\n        <Theme />\n        <Divider />\n        <Tshirt />\n      </Box>\n      <Footer />\n    </Drawer>\n  )\n}\n\nexport default Sidebar\n","import { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles((muitheme: Theme) =>\n  createStyles({\n    root: {\n      color: 'white',\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    iconButton: ({ theme }: any) => ({\n      backgroundColor: theme.color.dark,\n      color: 'white',\n      '&:hover': {\n        backgroundColor: theme.color.dark,\n      }\n    })\n  })\n)","import { AppBar, IconButton, Link, Toolbar, Typography } from '@material-ui/core'\nimport {  TuneOutlined as TuneOutlinedIcon } from '@material-ui/icons'\nimport { useRecoilState } from 'recoil'\nimport { sidebarIsActiveState } from 'store/sidebar/atoms'\nimport { skinThemeState } from 'store/skin/atoms'\nimport { useStyles } from './Header.styles'\n\nconst Navbar = () => {\n  const [sidebarIsActive, setSidebarIsActive] = useRecoilState(sidebarIsActiveState)\n  const [theme] = useRecoilState(skinThemeState)\n  const classes = useStyles({ theme })\n  const twitterLink = process.env.REACT_APP_TWITTER\n  return (\n    <AppBar\n      position=\"fixed\"\n      elevation={0}\n      className={classes.root}\n      color=\"transparent\"\n    >\n      <Toolbar>\n        <Typography variant=\"body2\">\n          <Link \n            href={twitterLink}\n            target=\"_blank\"\n            color=\"inherit\"\n          >\n            @moiseshp\n          </Link>\n        </Typography>\n        <div className={classes.grow}/>\n        <IconButton\n          edge=\"end\"\n          color=\"default\" \n          onClick={() => setSidebarIsActive(!sidebarIsActive)}\n          className={classes.iconButton}\n        >\n          <TuneOutlinedIcon /> \n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Navbar\n","import { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles((muiTheme: Theme) =>\n  createStyles({\n    root: ({ theme }) => ({\n      background: theme.isDark ? muiTheme.palette.background.default : muiTheme.palette.primary.main,\n      display: 'flex',\n    }),\n    content: {\n      height: '100vh',\n      flexGrow: 1,\n      padding: 0,\n      position: 'relative',\n    },\n    container: ({ theme, screen, breakpoint }: any) => ({\n      background: `radial-gradient(circle, ${theme.color?.light}, ${theme.color?.base})`,\n      height: breakpoint === 'xs' ? '100%' : screen.height,\n      width: breakpoint === 'xs' ? '100%' : screen.width,\n      left: '50%',\n      top: '50%',\n      position: 'relative',\n      transform: 'translate(-50%, -50%)',\n      zIndex: 1,\n      '&:before': {\n        content: '\"\"',\n        background: `linear-gradient(bottom, transparent, ${theme.color?.dark})`,\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        zIndex: 0\n      }\n    }),\n    tshirtWrapper: ({ screen, theme, tshirt }: any) => ({\n      backgroundImage: `url(${process.env.PUBLIC_URL}/images/${tshirt.source})`,\n      backgroundSize: 'auto 100%',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      padding: 0,\n      position: 'absolute',\n      left: '50%',\n      top: '50%',\n      margin: 0,\n      border: 0,\n      paddingTop: screen.tshirt.paddingTop,\n      height: screen.tshirt.height,\n      width: screen.tshirt.width,\n      marginTop: screen.tshirt.marginTop,\n      marginLeft: screen.tshirt.marginLeft,\n      '&:before': {\n        backgroundImage: `radial-gradient(${theme.color?.dark} 5%, transparent 50%)`,\n        content: '\"\"',\n        position: 'absolute',\n        width: '100%',\n        height: 60,\n        bottom: -50,\n        zIndex: -1,\n        left: '50%',\n        transform: 'translateX(-50%)'  \n      } \n    })\n  })\n)","import { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles((muitheme: Theme) =>\n  createStyles({\n    root: ({ screen }: any) => ({\n      width: '100%',\n      textAlign: 'center',\n      position: 'absolute',\n      left: '50%',\n      color: muitheme.palette.secondary.main,\n      fontFamily: 'NikeCroatia2020',\n      textShadow: '1px 1px 2px #FFF',\n      transform: 'translate(-50%, -50%)',\n      letterSpacing: 1,\n      top: screen.tshirt.name.top,\n      fontSize: screen.tshirt.name.fontSize\n    })\n  })\n)","import { skinNameState, skinScreenState } from 'store/skin/atoms'\nimport { useRecoilState } from 'recoil'\nimport { useStyles } from './TshirtName.styles'\nimport 'fonts/croatia/NikeCroatia2020.css'\n\nconst TshirtName = () => {\n  const [name] = useRecoilState(skinNameState)\n  const [screen] = useRecoilState(skinScreenState)\n  const classes = useStyles({ screen })\n  return (\n    <main className={classes.root}>\n      {name}\n    </main>\n  )\n}\n\nexport default TshirtName\n","import { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles((muitheme: Theme) =>\n  createStyles({\n    root: ({ screen }: any) => ({\n      width: '100%',\n      textAlign: 'center',\n      position: 'absolute',\n      color: muitheme.palette.secondary.main,\n      left: '50%',\n      fontFamily: 'NikeCroatia2020',\n      textShadow: '1px 2px 2px #FFF',\n      transform: 'translate(-50%, -50%)',\n      top: screen.tshirt.number.top,\n      fontSize: screen.tshirt.number.fontSize\n    })\n  })\n)","import { skinNumberState, skinScreenState } from 'store/skin/atoms'\nimport { useRecoilState } from 'recoil'\nimport { useStyles } from './TshirtNumber.styles'\nimport 'fonts/croatia/NikeCroatia2020.css'\n\nconst TshirtNumber = () => {\n  const [number] = useRecoilState(skinNumberState)\n  const [screen] = useRecoilState(skinScreenState)\n  const classes = useStyles({ screen })\n  return (\n    <main className={classes.root}>\n      {number}\n    </main>\n  )\n}\n\nexport default TshirtNumber\n","import Sidebar from 'components/Sidebar'\nimport Header from 'components/Header'\nimport { useStyles } from './Home.styles'\nimport { useRecoilState } from 'recoil'\nimport { skinTshirtState, skinThemeState, skinScreenState } from 'store/skin/atoms'\nimport useBreakpoint from 'hooks/useBreakpoint'\nimport TshirtName from './TshirtName'\nimport TshirtNumber from './TshirtNumber'\n\nconst Home = () => {\n  const [tshirt] = useRecoilState(skinTshirtState)\n  const [theme] = useRecoilState(skinThemeState)\n  const [screen] = useRecoilState(skinScreenState)\n  const breakpoint = useBreakpoint()\n  const classes = useStyles({ theme, screen, tshirt, breakpoint })\n  return (\n    <div className={classes.root}>\n      <Header />\n      <main className={classes.content}>\n        <article className={classes.container}>\n          <fieldset className={classes.tshirtWrapper}>\n            <TshirtName />\n            <TshirtNumber />\n          </fieldset>\n        </article>\n      </main>\n      <Sidebar />\n    </div>\n  )\n}\n\nexport default Home","const theme = {\n  typography: {\n    fontFamily: [\n      'Montserrat',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif'\n    ].join(','),\n    // fontWeightRegular: 300,\n    fontWeightSemiBold: 700,\n    fontWeightBold: 900,\n    button: {\n      // fontWeight: 800,\n    },\n  },\n  props: {\n    MuiButton: {\n      disableElevation: true,\n    },\n  },\n  palette: {\n    primary: {\n      main: '#060915',\n    },\n    secondary: {\n      main: '#E12921',\n    }  \n  }\n}\n\nexport default theme","import React from 'react'\nimport ReactGA from 'react-ga'\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Home from './pages/Home'\nimport theme from './theme'\n\nconst App = () => {\n  const muiTheme = createMuiTheme({ ...theme })\n\n  React.useEffect(() => {\n    ReactGA.initialize(process.env.REACT_APP_GA || '')\n    ReactGA.pageview(window.location.pathname)\n  }, [])\n  \n  return(\n    <ThemeProvider theme={responsiveFontSizes(muiTheme)}>\n      <CssBaseline />\n      <Home />\n    </ThemeProvider>\n  )\n}\n\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom'\nimport { RecoilRoot } from 'recoil'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <RecoilRoot>\n    <App />\n  </RecoilRoot>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}